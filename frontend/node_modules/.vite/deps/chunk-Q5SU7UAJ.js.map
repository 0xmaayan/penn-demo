{
  "version": 3,
  "sources": ["../../.pnpm/@aptos-labs+wallet-adapter-react@2.1.8_@aptos-labs+ts-sdk@1.7.0_aptos@1.21.0_react@18.2.0/node_modules/@aptos-labs/wallet-adapter-react/dist/index.mjs"],
  "sourcesContent": ["// src/useWallet.tsx\nimport { createContext, useContext } from \"react\";\nvar DEFAULT_CONTEXT = {\n  connected: false\n};\nvar WalletContext = createContext(\n  DEFAULT_CONTEXT\n);\nfunction useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error(\"useWallet must be used within a WalletContextState\");\n  }\n  return context;\n}\n\n// src/WalletProvider.tsx\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from \"react\";\nimport { WalletCore } from \"@aptos-labs/wallet-adapter-core\";\nimport { jsx } from \"react/jsx-runtime\";\nvar initialState = {\n  connected: false,\n  account: null,\n  network: null,\n  wallet: null\n};\nvar AptosWalletAdapterProvider = ({\n  children,\n  plugins,\n  autoConnect = false,\n  onError\n}) => {\n  const [{ connected, account, network, wallet }, setState] = useState(initialState);\n  const [isLoading, setIsLoading] = useState(true);\n  const walletCore = useMemo(() => new WalletCore(plugins), []);\n  const [wallets, setWallets] = useState(\n    walletCore.wallets\n  );\n  const connect = async (walletName) => {\n    try {\n      setIsLoading(true);\n      await walletCore.connect(walletName);\n    } catch (error) {\n      console.log(\"connect error\", error);\n      if (onError)\n        onError(error);\n      return Promise.reject(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const disconnect = async () => {\n    try {\n      await walletCore.disconnect();\n    } catch (error) {\n      if (onError)\n        onError(error);\n      return Promise.reject(error);\n    }\n  };\n  const signTransaction = async (transaction, asFeePayer, options) => {\n    try {\n      return await walletCore.signTransaction(transaction, asFeePayer, options);\n    } catch (error) {\n      if (onError)\n        onError(error);\n      return Promise.reject(error);\n    }\n  };\n  const signMessage = async (message) => {\n    try {\n      return await walletCore.signMessage(message);\n    } catch (error) {\n      if (onError)\n        onError(error);\n      return Promise.reject(error);\n    }\n  };\n  const signMessageAndVerify = async (message) => {\n    try {\n      return await walletCore.signMessageAndVerify(message);\n    } catch (error) {\n      if (onError)\n        onError(error);\n      return Promise.reject(error);\n    }\n  };\n  const submitTransaction = async (transaction) => {\n    try {\n      return await walletCore.submitTransaction(transaction);\n    } catch (error) {\n      if (onError)\n        onError(error);\n      return Promise.reject(error);\n    }\n  };\n  const signAndSubmitTransaction = async (transaction) => {\n    try {\n      return await walletCore.signAndSubmitTransaction(transaction);\n    } catch (error) {\n      if (onError)\n        onError(error);\n      return Promise.reject(error);\n    }\n  };\n  useEffect(() => {\n    if (autoConnect) {\n      if (localStorage.getItem(\"AptosWalletName\")) {\n        connect(localStorage.getItem(\"AptosWalletName\"));\n      } else {\n        setIsLoading(false);\n      }\n    }\n  }, wallets);\n  useEffect(() => {\n    if (connected) {\n      walletCore.onAccountChange();\n      walletCore.onNetworkChange();\n    }\n  }, [...wallets, connected]);\n  const handleConnect = () => {\n    setState((state) => {\n      return {\n        ...state,\n        connected: true,\n        account: walletCore.account,\n        network: walletCore.network,\n        wallet: walletCore.wallet\n      };\n    });\n  };\n  const handleDisconnect = () => {\n    if (!connected)\n      return;\n    setState((state) => {\n      return {\n        ...state,\n        connected: false,\n        account: walletCore.account,\n        network: walletCore.network,\n        wallet: null\n      };\n    });\n  };\n  const handleAccountChange = useCallback(() => {\n    if (!connected)\n      return;\n    if (!walletCore.wallet)\n      return;\n    setState((state) => {\n      return {\n        ...state,\n        account: walletCore.account\n      };\n    });\n  }, [connected]);\n  const handleNetworkChange = useCallback(() => {\n    if (!connected)\n      return;\n    if (!walletCore.wallet)\n      return;\n    setState((state) => {\n      return {\n        ...state,\n        network: walletCore.network\n      };\n    });\n  }, [connected]);\n  const handleReadyStateChange = (wallet2) => {\n    setWallets((wallets2) => [...wallets2]);\n  };\n  useEffect(() => {\n    walletCore.on(\"connect\", handleConnect);\n    walletCore.on(\"disconnect\", handleDisconnect);\n    walletCore.on(\"accountChange\", handleAccountChange);\n    walletCore.on(\"networkChange\", handleNetworkChange);\n    walletCore.on(\"readyStateChange\", handleReadyStateChange);\n    return () => {\n      walletCore.off(\"connect\", handleConnect);\n      walletCore.off(\"disconnect\", handleDisconnect);\n      walletCore.off(\"accountChange\", handleAccountChange);\n      walletCore.off(\"networkChange\", handleNetworkChange);\n      walletCore.off(\"readyStateChange\", handleReadyStateChange);\n    };\n  }, [...wallets, connected]);\n  return /* @__PURE__ */ jsx(WalletContext.Provider, {\n    value: {\n      connect,\n      account,\n      network,\n      connected,\n      disconnect,\n      wallet,\n      wallets,\n      signAndSubmitTransaction,\n      signTransaction,\n      signMessage,\n      signMessageAndVerify,\n      isLoading,\n      submitTransaction\n    },\n    children\n  });\n};\n\n// src/index.tsx\nimport {\n  WalletReadyState,\n  NetworkName,\n  isInAppBrowser,\n  isMobile,\n  isRedirectable\n} from \"@aptos-labs/wallet-adapter-core\";\nexport {\n  AptosWalletAdapterProvider,\n  NetworkName,\n  WalletReadyState,\n  isInAppBrowser,\n  isMobile,\n  isRedirectable,\n  useWallet\n};\n"],
  "mappings": "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",
  "names": ["import_react"]
}
